{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","file","shoes","name","price","nominated","onChangeFile","bind","onChangeName","onChangePrice","handleUpload","handleNominate","this","input","data","FormData","append","fetch","method","body","then","shoe","console","log","setState","res","json","result","Container","fluid","Row","Col","md","Card","Header","Body","Form","Group","File","type","id","label","onChange","e","target","files","Label","Control","placeholder","value","Button","variant","onClick","Table","striped","bordered","hover","map","index","width","height","src","concat","style","textAlign","window","open","Img","Text","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.f63c4028.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Table from \"react-bootstrap/Table\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      shoes: [],\n      name: \"\",\n      price: \"\",\n      nominated: null\n    };\n    this.onChangeFile = this.onChangeFile.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangePrice = this.onChangePrice.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleNominate = this.handleNominate.bind(this);\n  }\n\n  onChangeFile(file) {\n    this.state.file = file;\n  }\n\n  onChangeName(input) {\n    this.state.name = input;\n  }\n\n  onChangePrice(input) {\n    this.state.price = input;\n  }\n\n  handleUpload() {\n    var data = new FormData();\n    data.append(\"file\", this.state.file);\n    data.append(\"name\", this.state.name);\n    data.append(\"price\", this.state.price);\n\n    fetch(\"/upload\", {\n      method: \"POST\",\n      body: data\n    }).then(() => {\n      this.state = {\n        ...this.state,\n        file: null,\n        shoes: [],\n        name: \"\",\n        price: \"\"\n      };\n    });\n  }\n\n  handleNominate(shoe) {\n    console.log(shoe);\n    this.setState({\n      nominated: shoe\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"/shoes\")\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          shoes: result.shoes\n        });\n      });\n  }\n\n  render() {\n    const funStyle = {\n      textAlign: \"left\"\n    };\n    return (\n      <Container fluid>\n            <h1>Popular Shoe Releases of 2020</h1>\n        <Row>\n          <Col md={6}>\n            <Card>\n              <Card.Header>Upload Your Own Shoe</Card.Header>\n              <Card.Body>\n                <Form>\n                  <Form.Group>\n                    <Form.File\n                      type=\"file\"\n                      id=\"pic\"\n                      label=\"Image of the Shoe\"\n                      onChange={e => this.onChangeFile(e.target.files[0])}\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Label>Name of the Shoe</Form.Label>\n                    <Form.Control\n                      placeholder=\"Name\"\n                      onChange={e => {\n                        this.onChangeName(e.target.value);\n                      }}\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Label>Market Price</Form.Label>\n                    <Form.Control\n                      placeholder=\"Market Price\"\n                      onChange={e => {\n                        this.onChangePrice(e.target.value);\n                      }}\n                    />\n                  </Form.Group>\n\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    onClick={this.handleUpload}\n                  >\n                    Upload\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n            <p>\n              <b>\n                <i>\n                  Pick your favourite shoe of the year by clicking nominate!\n                </i>\n              </b>\n            </p>\n            <h4>\n              <b>List of the shoes:</b>\n            </h4>\n            <Table striped bordered hover>\n              {\" \"}\n                    \n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Image</th>\n                  <th>Market Price</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.shoes.map((shoe, index) => {\n                  return (\n                    <tr>\n                      <td>{shoe[\"name\"]}</td>\n                      <td>\n                        <img\n                          width=\"200px\"\n                          height=\"200px\"\n                          src={\"../static/\".concat(shoe[\"imgpath\"])}\n                        />\n                      </td>\n                      <td>${shoe[\"marketprice\"]}</td>\n                      <td>\n                        <Button\n                          variant=\"primary\"\n                          onClick={() => this.handleNominate(shoe)}\n                        >\n                          Nominate\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </Col>\n          <Col md={6}>\n            <p style={funStyle}>\n              <Card>\n                <Card.Header>Fun Fact</Card.Header>\n                <Card.Body>\n                  <h3>\n                    Want to find out how much Michael Jordan game worn shoe\n                    shold for?\n                  </h3>\n                  <Button\n                    onClick={() => {\n                      const url =\n                        \"https://www.nytimes.com/2020/05/18/sports/air-jordan-sneakers-auction-record.html\";\n                      window.open(url, \"_blank\");\n                    }}\n                  >\n                    YES!\n                  </Button>\n                </Card.Body>\n              </Card>\n            </p>\n            <br />\n            {this.state.nominated !== null && (\n              <Card>\n                <Card.Header>Your Favourite Shoe of 2020!</Card.Header>\n                <Card.Img\n                  variant=\"top\"\n                  width=\"180px\"\n                  height=\"450px\"\n                  src={\"../static/\".concat(this.state.nominated[\"imgpath\"])}\n                />\n                <Card.Text>{this.state.nominated[\"name\"]}</Card.Text>\n              </Card>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}